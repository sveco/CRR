#Use this template json config file to customize CRR
{
    Feeds: [
    { 
        #Filtered feed - find all unread articles
        FeedQuery: "IsNew == true",
        Title: "Unread"
    },
    { 
        FeedUrl: "https://www.reddit.com/r/news/.rss",
        #Define filters for html id's and classes. Elements from those classes will be ignored when converting html to text. use '.' prefix for classes and # for id's.
        Title: "Reddit News"
    },
    { 
        FeedUrl: "http://feeds.bbci.co.uk/news/world/rss.xml",
        #Define filters for html id's and classes. Elements from those classes will be ignored when converting html to text. use '.' prefix for classes and # for id's.
        Filters: ["#orb-banner","#orb-footer", ".column--secondary", ".tags-container", ".story-more", "#comp-pattern-library", "#comp-from-other-news-sites", ".with-extracted-share-icons",
        ".share-tools--no-event-tag", ".share share--lightweight  show ghost-column", ".navigation navigation--wide", "#core-navigation", ".site-brand site-brand--height", "#bbc-news-services", ".off-screen"]
        #,Title: "BBC News - Home"
    },
    { 
        FeedUrl: "https://www.theregister.co.uk/emergent_tech/artificial_intelligence/headlines.atom",
        Title: "The Register - Emergent Tech: Artificial Intelligence",
     		Filters: ["#story-bot-col", "#nav_pop", "#site_nav", "#top_nav", "#site_nav_mobile", "#footer"]
    },
    { 
        #Filtered feed - find all articles in newscientist feed with word 'Mars' in Title or Summary
        FeedQuery: "(Summary != null && Summary.Contains(\"Mars\")) || (Title != null && Title.Contains(\"Mars\"))",
        Title: "Dynamic feed - Mars"
    },
    { 
        #Filter applyed to real feed - show only unread articles
        FeedUrl: "http://news.nationalgeographic.com/rss/all-over-the-map.rss"
    },
    {
        FeedUrl: "http://feeds.boingboing.net/boingboing/iBag",
        #If hidden flag is set, feed will not be visible in list and only accessible via dynamic query
        Hidden: true
    },
    {
        FeedUrl: "http://www.osel.cz/rss/rss.php",
        Filters: [".leftright", "#clanky_diskuse", ".zapati_clanku"],
        Title: "Osel.cz - Unicode support showcase"
    },
    {
        FeedUrl: "http://rss.slashdot.org/slashdot/slashdot",
        Select: "//div[@id='firehoselist']",
        Filters: [".view_mode", "#newa2footerv2"]
    },
    {
        FeedUrl: "https://mail.google.com/mail/feed/atom",
        Title: "Gmail inbox feed",
        UserName: "ultrabrutalac@gmail.com",
        #Ideally create separate password for cFeed, for example google provides this via https://myaccount.google.com/apppasswords. Keep this file secure if it contains passwords.
        Password: "uacrvwhiblwrzmdc"
    },
    {
        FeedQuery: "Tags != null && Tags.Contains(\"science\")",
        Title: "TAG: Science",
        Tags: ["Science"]
    }
    ],
    UI: {
        Strings: {
            #ReadStateNew                : "N",
            #ReadStateRead               : " ",
            #DownloadStateDownloaded     : "D",
            #DownloadStatePending        : " ",
            #DeleteStateDeleted          : "X",
            #DeleteStateNotDeleted       : " ",
            #LoadingSuffix               : " - Loading...",
            #LoadingPrefix               : "",
            ##Feed list
            #FeedListHeaderFormat        : "╗ cfeed v%V - console feed reader ╔",
            #FeedListItemFormat          : "%i:3r %n [%u] %g:16l %t",
            #FeedListFooterFormat        : " Q:Quit ENTER/Space:List articles R:Reload Ctrl+R:Reload all ",
            ##Article list
            #ArticleListHeaderFormat     : "╗ cFeed v%V - Articles in \'%t\' %u ╔",
            #ArticleListItemFormat       : "%i:3r [%n|%D|%x] %d  %t",
            #ArticleListDateFormat       : "MMM dd",
            #ArticleListFooterFormat     : " ESC/Backspace:Back M:Mark read U:Mark Unread R:Reload ",
            ##Article
            #ArticleHeaderFormat         : "cFeed v%V - Article:%t ",
            #ArticleFooterFormat         : " ESC/Backspace:Back O:Open N:Next L:Link I:Image S:Download <:Prev >:Next [:Prev Unread ]:Next Unread ",
            #ArticleTextFeedUrlLabel     : "Feed: ",
            #ArticleTextTitleLabel       : "Title: ",
            #ArticleTextAuthorsLabel     : "Author(s): ",
            #ArticleTextLinkLabel        : "Link: ",
            #ArticleTextPublishDateLabel : "Date: ",
            #LoadingText                 : " loading content ",
            ##Prompts
            #PromptMarkAll               : "Mark all articles as read?",
            #PromptDeleteAll             : "Mark all articles for deletion?",
            #PromptPurge                 : "Purge deleted articles?",
            #PromptAnswerYes             : "Yes",
            #PromptAnswerNo              : "No"
        },
        Colors: {
            #For a valid list of color names see https://msdn.microsoft.com/en-us/library/system.consolecolor(v=vs.110).aspx
            #ArticleTextHighlight: "Yellow",
            #LinkHighlight: "DarkCyan",
            #ImageLinkHighlight: "Yellow",
            #LinkInputForeground: "Black",
            #LinkInputBackground: "DarkYellow"
        },
        Layout: {

        }
    },
    Shortcuts: {
        #For a valid list of keys see https://msdn.microsoft.com/en-us/library/system.consolekey(v=vs.110).aspx
        #For a valid list of modifiers see https://msdn.microsoft.com/en-us/library/system.consolemodifiers(v=vs.110).aspx
        #Some key combination are used by windows itself if you enable advanced console features. Avoid those combinations https://technet.microsoft.com/en-us/library/mt427362.aspx
        #   Setting   | Key                                              | Action                            | Scope
        # ----------- | ------------------------------------------------ | --------------------------------- | ----------------------------------
        #QuitApp     :{ Key: ["Q"]                               , _comment: "| Exits the app                     | Feed list															 "},
        #Reload      :{ Key: ["R"]                               , _comment: "| Reloads selected feed or article  | Feed list, Article list								 "},
        #ReloadAll   :{ Key: ["R"], Modifiers: ["Control"]       , _comment: "| Reolad all feeds                  | Feed list															 "},
        #OpenArticle :{ Key: ["Enter", "Spacebar"]               , _comment: "| Opens selected article            | Article list													 "},
        #OpenBrowser :{ Key: ["O"]                               , _comment: "| Opens article in browser          | Article list, Article									 "},
        #OpenFeed    :{ Key: ["Enter", "Spacebar"]               , _comment: "| Lists articles in selected feed   | Feed list															 "},
        #RefreshView :{ Key: ["F"]                               , _comment: "| Redraws the UI                    | Feed list															 "},
        #Prev        :{ Key: ["OemComma"]                        , _comment: "| (<) Previous article              | Article																 "},
        #PrevUnread  :{ Key: ["Oem4"]                            , _comment: "| ([) Previous unread article       | Article																 "},
        #Next        :{ Key: ["OemPeriod"]                       , _comment: "| (>) Next Article                  | Article																 "},
        #NextUnread  :{ Key: ["Oem6"]                            , _comment: "| (]) Next unread article           | Article																 "},
        #Delete      :{ Key: ["X"]                               , _comment: "| Mark selected article for deletion| Article																 "},
        #DeleteAll   :{ Key: ["X"], Modifiers: ["Control","Alt"] , _comment: "| Mark all articles for deletion    | Article list													 "},
				#Purge       :{ Key: ["D4"], Modifiers: ["Shift"]        , _comment: "| Purge deleted articles						| Feed list															 "},
        #StepBack    :{ Key: ["Escape", "Backspace"]             , _comment: "| Navigates back                    | Feed list, Article list, Article			 "},
        #SaveArticle :{ Key: ["S"]                               , _comment: "| Reolads article from web and saves| Article																 "},
        #Download    :{ Key: ["D"]                               , _comment: "| Downloads Article                 | Article list													 "},
        #MarkRead    :{ Key: ["M"]                               , _comment: "| Mark selected article as read     | Article list													 "},
				#MarkAllRead :{ Key: ["A"]                               , _comment: "| Mark all articles as read		      | Article list, Feed List (selected item)"},
        #MarkUnread  :{ Key: ["U"]                               , _comment: "| Remove read flag                  | Article list													 "},
        #OpenLink    :{ Key: ["L"]                               , _comment: "| Open numbered link in browser     | Article																 "},
        #OpenImage   :{ Key: ["I"]                               , _comment: "| Open numbered image in browser    | Article																 "},
        #Search      :{ Key: ["Oem2"]                            , _comment: "| (/) Search feeds                  | Feed list, Article list								 "} 
    },
    #Define custom browser to use to open articles, links and images
    #Browser: ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"",
    Browser: "C:\\Program Files\\Mozilla Firefox\\firefox.exe",
    #Debug level to write to log. Levels are None, Debug, Info, Warning, Error, Critical, in that order. Setting level to "Warning", will log Warning, Error and Critical. SEtting none turns off logging.
    Debug: "Trace",
    #Database name to use.
    #Database: "cfeed.db",
    #Saved article file name format to use. See documentation for supported replacement strings.
    #SavedFileName: ".\\saved\\%d\\%t.txt",
    #Path to OPML file to load. Can be also set by command line param -o <path>
    #Opml: "feedly.opml",
    #Whether to refresh all feeds automatically on load. Default is true.
    Refresh: true
}
